#version 430
precision highp float;

layout(location = 0) in vec3 vertices;
layout(location = 1) in vec2 texcoord;
// layout(location = 2) in vec3 normals;

uniform mat4 project;
uniform mat4 view;
uniform mat4 world;
uniform vec4 light_color;

// uniform vec2 animation_texcoord;

out vec2 fragment_texcoord;
out vec4 fragment_light_color;

invariant gl_Position;

/*float modulo(float a, float b)
{
    return a - (b * floor(a / b));
}*/

void main()
{
    //gl_Position = vec4(vertices, 1.0) * world * view * project;
    gl_Position = project * view * vec4(vertices, 1.0);
    fragment_texcoord = texcoord;//vec2(modulo(texcoord.x + animation_texcoord.x, 1.0), modulo(texcoord.y + animation_texcoord.y, 1.0));
    fragment_light_color = light_color;
}
